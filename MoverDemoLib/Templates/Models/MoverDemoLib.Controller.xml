<?xml version='1.0' encoding='iso-8859-1'?>
<Model Name="MoverDemoLib.Controller" Version="2.0">
 <ModelTypeClass>C++</ModelTypeClass>
 <BaseModel>CDPComponent</BaseModel>
 <Priority>normal</Priority>
 <fs>5</fs>
 <Attributes>
  <Attribute Type="string" Name="Description" Value="Simple component"/>
  <Attribute SaveOnChange="0" Type="string" Name="Model" Description="Implementation model used." ReadOnly="1" Required="1" Value="MoverDemoLib.Controller"/>
 </Attributes>
 <Signals>
  <Signal Description="Speed of left motor (between 0 and 100)" Type="double" Input="0" Name="MotorLeft" Model="CDPSignal&lt;double&gt;"/>
  <Signal Description="Speed of right motor (between 0 and 100)" Type="double" Input="0" Name="MotorRight" Model="CDPSignal&lt;double&gt;"/>
  <Signal Description="Proximity to wall (between 0 and 100)" Type="double" Input="1" Name="SensorFront" Model="CDPSignal&lt;double&gt;"/>
  <Signal Description="Proximity to wall (between 0 and 100)" Type="double" Input="1" Name="SensorLeft" Model="CDPSignal&lt;double&gt;"/>
  <Signal Description="Proximity to wall (between 0 and 100)" Type="double" Input="1" Name="SensorRight" Model="CDPSignal&lt;double&gt;"/>
  <Signal Description="PID regulator used to follow left wall" Type="double" Model="CDPSignal&lt;double&gt;" Value="" Name="PIDLeft" Input="1" Unit=""/>
  <Signal Description="PID regulator used to follow right wall" Type="double" Model="CDPSignal&lt;double&gt;" Value="" Name="PIDRight" Input="1" Unit=""/>
 </Signals>
 <States>
  <State Description="Use left sensor to follow wall" Name="FollowLeftWall"/>
  <State Description="Use right sensor to follow wall" Name="FollowRightWall"/>
  <State Description="Drive straight" Name="Drive"/>
  <State Description="Turn until front sensor can't see any walls" Name="Turn"/>
 </States>
 <StateTransitions>
  <StateTransition ToState="FollowLeftWall" Name="DriveToFollowLeftWall" FromState="Drive"/>
  <StateTransition ToState="Turn" Name="DriveToTurn" FromState="Drive"/>
  <StateTransition ToState="FollowRightWall" Name="DriveToFollowRightWall" FromState="Drive"/>
  <StateTransition ToState="Drive" Name="NullToDrive" FromState="Null"/>
  <StateTransition ToState="Drive" Name="TurnToDrive" FromState="Turn"/>
  <StateTransition ToState="FollowLeftWall" Name="TurnToFollowLeftWall" FromState="Turn"/>
  <StateTransition ToState="FollowRightWall" Name="TurnToFollowRightWall" FromState="Turn"/>
  <StateTransition ToState="Drive" Name="FollowRightWallToDrive" FromState="FollowRightWall"/>
  <!--<StateTransition ToState="FollowLeftWall" FromState="FollowRightWall" Name="FollowRightWallToFollowLeftWall"/>-->
  <StateTransition ToState="Turn" Name="FollowRightWallToTurn" FromState="FollowRightWall"/>
  <StateTransition ToState="Drive" Name="FollowLeftWallToDrive" FromState="FollowLeftWall"/>
  <!--<StateTransition ToState="FollowRightWall" FromState="FollowLeftWall" Name="FollowLeftWallToFollowRightWall"/>-->
  <StateTransition ToState="Turn" Name="FollowLeftWallToTurn" FromState="FollowLeftWall"/>
 </StateTransitions>
 <Element Description="Base speed when following a wall" SaveOnChange="1" Type="double" LogEventOnChange="1" RouteMethod="RouteEvent" Name="BaseSpeed" Value="40"/>
 <Element Description="Preferred side sensor value (distance) when following a wall." SaveOnChange="1" Type="double" LogEventOnChange="1" RouteMethod="RouteEvent" Name="DistanceFromWall" Value="20"/>
 <Element Description="Motor speed when in Drive state" SaveOnChange="1" Type="double" LogEventOnChange="1" RouteMethod="RouteEvent" Name="DriveStraightSpeed" Value="10"/>
 <Element Description="Minimum front sensor value before wall is detected and robot switches to Turn state" SaveOnChange="1" Type="double" LogEventOnChange="1" RouteMethod="RouteEvent" Name="SensorFrontWallThreshold" Value="15"/>
 <Element Description="Minimum left sensor value before wall is detected" SaveOnChange="1" Type="double" LogEventOnChange="1" RouteMethod="RouteEvent" Name="SensorLeftWallThreshold" Value="15"/>
 <Element Description="Minimum right sensor value before wall is detected" SaveOnChange="1" Type="double" LogEventOnChange="1" RouteMethod="RouteEvent" Name="SensorRightWallThreshold" Value="15"/>
 <Element Description="Motor speed while in Turn state" SaveOnChange="1" Type="double" LogEventOnChange="1" RouteMethod="RouteEvent" Name="TurnSpeed" Value="20"/>
</Model>
